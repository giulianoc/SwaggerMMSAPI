openapi: 3.0.0
servers:
  - description: Media Management System Base URL
    url: https://mms-api.cloud-mms.com/catramms/v1
info:
  description: Media Management System REST API
  version: v1
  title: Media Management Service REST API
  contact:
    email: mms-technical-support@cloud-mms.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: MMS account
    description: sign in, registration
  - name: workspace
    description: creation, sharing, ...
  - name: mediaItems
    description: list/update media items (contents)
  - name: delivery
    description: create delivery authorization for VOD and LIVE contents
  - name: ingestion
    description: ingestion Jobs, ...
  - name: encoding
    description: encoding Jobs, ...
  - name: encodingProfiles
    description: creation, update, ...
  - name: social
    description: youTube/facebook account/configuration, ...
  - name: channels
    description: IP/SAT channels configuration, ...
  - name: encoder
    description: add new encoders, encoders pool, ...
  - name: workflowAsLibrary
    description: libraries of workflow
  - name: ftp
    description: FTP configuration, ...
  - name: email
    description: EMAIL configuration, ...
  - name: other
    description: status, support, ...
security: 
  - BasicAuth: []
paths:
  /status:
    get:
      security: []
      tags:
        - other
      summary: status of the API service
      operationId: statusAPI
      description: Provide the status of the MMS API service
      responses:
        '200':
          description: API service is up and running
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - version-api
                properties:
                  status:
                    type: string
                  version-api:
                    type: string
        '500':
          description: API service is NOT up and running
  /support:
    post:
      tags:
        - other
      summary: request for support
      operationId: mmsSupport
      description: in case of any issue/question about MMS, this API allows you to ask support to the MMS team
      responses:
        '201':
          description: support was submitted
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: wrong basic authentication
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Support'
        description: 'Support request details:'
  /login:
    post:
      security: []
      tags:
        - MMS account
      summary: login into the MMS platform and return the api-key
      operationId: login
      description: This API allows the user to login into the MMS platform.
        As input user and password as input, the output will be the api-key
        associated to the user default workspace
        with all the rights the user has on the specified workspace
      responses:
        '200':
          description: login done successful
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/UserAndWorkspace'
        '400':
          description: 'Json field is not present or it is null'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - EMail
                - Password
              properties:
                EMail:
                  type: string
                  example: anthony@companyName.com
                Password:
                  type: string
                  example: k9wo39lksh
                RemoteClientIPAddress:
                  type: string
                  description: in case this field is present, MMS register the client IP |
                    used by the user
                  example: 111.222.333.444
        description: 'User details'
  /user:
    post:
      security: []
      tags:
        - MMS account
      summary: register a new User
      operationId: registerUser
      description: This API registers a new user into the MMS platform
        and creates his default workspace.
      responses:
        '201':
          description: user registered and workspace created successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - userKey
                    - workspaceKey
                  properties:
                    userKey:
                      type: integer
                      format: int64
                      example: 123
                    workspaceKey:
                      type: integer
                      format: int64
                      example: 824
        '400':
          description: 'Json field is not present or it is null'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        description: 'User for Registration details'
    put:
      tags:
        - MMS account
      summary: update of a User metadata
      operationId: updateUser
      description: This API updates the user metadata
      responses:
        '200':
          description: user updated successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Name
                  - EMail
                  - Country
                properties:
                  Name:
                    type: string
                    example: Anthony
                  EMail:
                    type: string
                    example: anthony@companyName.com
                  Country:
                    type: string
                    example: Italy
        description: 'User fields to be updated'
  /user/{userKey}/{confirmationeCode}:
    get:
      security: []
      tags:
        - MMS account
      summary: confirm the registration of the user
      operationId: confirmRegistration
      description: confirm the registration of the user
      parameters:
        - in: path
          name: userKey
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: confirmationeCode
          required: true
          schema:
            type: string
      responses:
        '201':
          description: it returns the api-key of the pair userKey-workspaceKey
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - apiKey
                properties:
                  status:
                    type: string
                  apiKey:
                    type: string
        '500':
          description: internal server error
  /workspace:
    get:
      tags:
        - workspace
      summary: list all the workspaces of a user, own and shared workspaces
      operationId: workspaceList
      description: list all the workspaces of a user, own and shared workspaces
      responses:
        '200':
          description: list of all the workspaces
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - workspaces
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        workspaces:
                          type: array
                          items:
                            $ref: '#/components/schemas/Workspace'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - workspace
      summary: create a new Workspace
      operationId: registerWorkspace
      description: This API registers a new workspace into the MMS platform. It can be executed only by a user having the createRemoveWorkspace or admin priviledge
      responses:
        '201':
          description: workspace created successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - workspaceKey
                  properties:
                    workspaceKey:
                      type: integer
                      format: int64
                      example: 824
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - WorkspaceName
                properties:
                  WorkspaceName:
                    type: string
                    example: news video
        description: 'Workspace details'
    put:
      tags:
        - workspace
      summary: update of a Workspace metadata
      operationId: updateWorkspace
      description: This API updates the Workspace metadata. Only the owner of the workspace is able to do the update. Moreover, the isEnabled, maxEncodingPriority, encodingPeriod,
        maxIngestionsNumber and maxStorageInMB fields can be updated only by admin
      responses:
        '200':
          description: workspace updated successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Enabled
                  - Name
                  - MaxEncodingPriority
                  - EncodingPeriod
                  - MaxIngestionsNumber
                  - MaxStorageInMB
                  - LanguageCode
                  - CreateRemoveWorkspace
                  - IngestWorkflow
                  - CreateProfiles
                  - DeliveryAuthorization
                  - ShareWorkspace
                  - EditMedia
                  - EditConfiguration
                  - KillEncoding
                  - CancelIngestionJob
                  - EditEncodersPool
                  - ApplicationRecorder
                properties:
                  Enabled:
                    type: boolean
                    example: true
                  Name:
                    type: string
                    example: News Video
                  MaxEncodingPriority:
                    type: string
                    example: Low
                  EncodingPeriod:
                    type: string
                    example: Daily
                  MaxIngestionsNumber:
                    type: integer
                    format: int64
                    example: 20000
                  MaxStorageInMB:
                    type: integer
                    format: int64
                    example: 500000
                  LanguageCode:
                    type: string
                    example: it
                  CreateRemoveWorkspace:
                    type: boolean
                    example: true
                  IngestWorkflow:
                    type: boolean
                    example: true
                  CreateProfiles:
                    type: boolean
                    example: true
                  DeliveryAuthorization:
                    type: boolean
                    example: true
                  ShareWorkspace:
                    type: boolean
                    example: true
                  EditMedia:
                    type: boolean
                    example: true
                  EditConfiguration:
                    type: boolean
                    example: true
                  KillEncoding:
                    type: boolean
                    example: true
                  CancelIngestionJob:
                    type: boolean
                    example: true
                  EditEncodersPool:
                    type: boolean
                    example: true
                  ApplicationRecorder:
                    type: boolean
                    example: true
        description: 'Workspace fields to be updated'
    delete:
      tags:
        - workspace
      summary: delete the Workspace
      operationId: deleteWorkspace
      description: delete the Workspace identified by the apikey (http basic authentication password). If the owner does not have any other workspace, also the user is removed. It can be executed only by a user having the createRemoveWorkspace or admin priviledge.
      responses:
        '200':
          description: workspace deleted successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /workspace-encoder/{workspaceKey}/{encoderKey}:
    post:
      tags:
        - encoder
      summary: associate the encoder to the workspace
      operationId: workspaceEncoderAssociation
      description: This API associates the encoder to a workspace
      parameters:
        - in: path
          name: workspaceKey
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: encoderKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: association workspace-encoder created successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - workspaceKey
                    - encoderKey
                  properties:
                    workspaceKey:
                      type: integer
                      format: int64
                      example: 824
                    encoderKey:
                      type: integer
                      format: int64
                      example: 824
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    delete:
      tags:
        - encoder
      summary: delete the association workspace-encoder
      operationId: deleteWorkspaceEncoder
      description: delete the association workspace-encoder. Only admin has the rights to do it
      parameters:
        - in: path
          name: workspaceKey
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: encoderKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: association workspace-encoder deleted successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - workspaceKey
                    - encoderKey
                  properties:
                    workspaceKey:
                      type: integer
                      format: int64
                      example: 824
                    encoderKey:
                      type: integer
                      format: int64
                      example: 824
        '401':
          description: 'wrong basic authentication'
        '403':
          description: 'APIKey does not have the admin permission'
        '500':
          description: 'internal server error'
  /workspace/share:
    put:
      tags:
        - workspace
      summary: share the workspace with another user
      operationId: shareWorkspace
      description: This API shares a workspace with a user already present or a new user.  It can be executed only by a user having the shareWorkspace or admin priviledge.
      parameters:
        - in: query
          name: userAlreadyPresent
          required: true
          schema:
            type: boolean
        - in: query
          name: createRemoveWorkspace
          required: true
          schema:
            type: boolean
        - in: query
          name: ingestWorkflow
          required: true
          schema:
            type: boolean
        - in: query
          name: createProfiles
          required: true
          schema:
            type: boolean
        - in: query
          name: deliveryAuthorization
          required: true
          schema:
            type: boolean
        - in: query
          name: shareWorkspace
          required: true
          schema:
            type: boolean
        - in: query
          name: editMedia
          required: true
          schema:
            type: boolean
        - in: query
          name: editConfiguration
          required: true
          schema:
            type: boolean
        - in: query
          name: killEncoding
          required: true
          schema:
            type: boolean
        - in: query
          name: cancelIngestionJob
          required: true
          schema:
            type: boolean
        - in: query
          name: editEncodersPool
          required: true
          schema:
            type: boolean
        - in: query
          name: applicationRecorder
          required: true
          schema:
            type: boolean
      responses:
        '201':
          description: workspace shared successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - userKey
                  properties:
                    userKey:
                      type: integer
                      format: int64
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
                type: object
                items:
                  type: object
                  required:
                    - EMail
                  properties:
                    EMail:
                      type: string
                      example: anthony@companyName.com
                    Password:
                      type: string
                      description: this field is 'required' in case userAlreadyPresent is false
                      example: 19264hd93h
                    Name:
                      type: string
                      description: this field is 'required' in case userAlreadyPresent is false
                      example: Anthony
                    Country:
                      type: string
                      description: this field is 'required' in case userAlreadyPresent is false
                      example: Italy
        description: 'Just the EMail if userAlreadyPresent is true, all the above fields if userAlreadyPresent is false'
  /workspace/default/{workspaceKeyToBeSetAsDefault}:
    put:
      tags:
        - workspace
      summary: set the default workspace
      operationId: workspaceDefault
      description: This API set the workspace specified by the path parameter as default. This is the workspace used by the MMS platform once the user login into the system
      parameters:
        - in: path
          name: workspaceKeyToBeSetAsDefault
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: default flag set successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /workspace/usage:
    get:
      tags:
        - workspace
      summary: return the storage used by the workspace
      operationId: workspaceUsage
      description: return the storage used by the workspace
      responses:
        '200':
          description: storage usage calculated successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /encoder:
    get:
      tags:
        - encoder
      summary: list all the encoders associated to the workspace
      operationId: encoderList
      description: return all the encoders associated to the workspace (current api-key). Only in case of admin, it is possible to ask for all the encoders available into the MMS platform or the encoder for a specific workspace (different from the one associated to the api-key)
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: label
          required: false
          schema:
            type: string
        - in: query
          name: serverName
          required: false
          schema:
            type: string
        - in: query
          name: port
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: labelOrder
          required: false
          description: asc or desc
          schema:
            type: string
        - in: query
          name: allEncoders
          required: false
          description: only in case of user with admin priviledge
          schema:
            type: boolean
        - in: query
          name: workspaceKey
          required: false
          description: only in case of user with admin priviledge
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: list of the encoders
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encoders
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        encoders:
                          type: array
                          items:
                            $ref: '#/components/schemas/Encoder'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - encoder
      summary: add a new encoder
      operationId: addEncoder
      description: This API adds a new encoder into the MMS platform. It can be executed only by a user having the admin priviledge.
      responses:
        '201':
          description: workspace created successful
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Encoder'
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - EncoderKey
                properties:
                  EncoderKey:
                    type: integer
                    format: int64
        description: 'Encoder details'
  /encoder/{encoderKey}:
    get:
      tags:
        - encoder
      summary: provide encoder details
      operationId: encoderDetails
      description: return the encoder details identified by the encoderKey parameter
      parameters:
        - in: path
          name: encoderKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encoder details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encoders
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        encoders:
                          type: array
                          items:
                            $ref: '#/components/schemas/Encoder'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - encoder
      summary: update of the Encoder metadata
      operationId: updateEncoder
      description: This API updates the Encoder metadata. It can be executed only by a user having the admin priviledge.
      parameters:
        - in: path
          name: encoderKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encoder updated successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - EncoderKey
                  properties:
                    EncoderKey:
                      type: integer
                      format: int64
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                  $ref: '#/components/schemas/Encoder'
        description: 'Encoder fields to be updated'
    delete:
      tags:
        - encoder
      summary: remove the Encoder
      operationId: deleteEncoder
      description: delete the Encoder identified by the encoderKey parameter. It can be executed 
        only by a user having the admin priviledge.
      parameters:
        - in: path
          name: encoderKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encoder deleted successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /encodersPool:
    get:
      tags:
        - encoder
      summary: list all the encodersPool associated to the workspace
      operationId: encodersPoolList
      description: return all the encodersPool associated to the workspace (current api-key).
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: label
          required: false
          schema:
            type: string
        - in: query
          name: labelOrder
          required: false
          description: asc or desc
          schema:
            type: string
      responses:
        '200':
          description: list of the encodersPool
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encoders
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        encoders:
                          type: array
                          items:
                            $ref: '#/components/schemas/EncodersPool'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - encoder
      summary: add a new encodersPool
      operationId: addEncodersPool
      description: This API adds a new encodersPool into the MMS platform.
      responses:
        '201':
          description: encodersPool created successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - EncodersPoolKey
                  properties:
                    EncodersPoolKey:
                      type: integer
                      format: int64
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Label
                  - encoderKeys
                properties:
                  encoderKeys:
                    type: array
                    items:
                      type: integer
                      format: int64
        description: 'EncodersPool details'
  /encodersPool/{encodersPoolKey}:
    get:
      tags:
        - encoder
      summary: provide encodersPool details
      operationId: encodersPoolDetails
      description: return the encodersPool details identified by the encodersPoolKey parameter
      parameters:
        - in: path
          name: encodersPoolKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encodersPool details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encoders
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        encoders:
                          type: array
                          items:
                            $ref: '#/components/schemas/EncodersPool'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - encoder
      summary: update of the EncodersPool metadata
      operationId: updateEncodersPool
      description: This API updates the EncodersPool metadata.
      parameters:
        - in: path
          name: encodersPoolKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encodersPool updated successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - EncodersPoolKey
                  properties:
                    EncoderKey:
                      type: integer
                      format: int64
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                  $ref: '#/components/schemas/EncodersPool'
        description: 'EncodersPool fields to be updated'
    delete:
      tags:
        - encoder
      summary: remove the EncodersPool
      operationId: deleteEncodersPool
      description: delete the EncodersPool identified by the encodersPoolKey parameter
      parameters:
        - in: path
          name: encodersPoolKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encodersPool deleted successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /workflowAsLibrary:
    get:
      tags:
        - workflowAsLibrary
      summary: list all the workflow libraries
      operationId: workflowAsLibraryList
      description: return all the workflow libraries associated to the workspace (current api-key).
      responses:
        '200':
          description: list of the workflow libraries
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - workflowsLibrary
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        workflowsLibrary:
                          type: array
                          items:
                            $ref: '#/components/schemas/WorkflowLibrary'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - workflowAsLibrary
      summary: add/update the workflow library
      operationId: updateWorkflowAsLibrary
      description: This API add or updates the library of workflow. The body contains the workflow and his label is the identifier of the workflow
      responses:
        '200':
          description: encodersPool updated successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - EncodersPoolKey
                  properties:
                    EncoderKey:
                      type: integer
                      format: int64
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                  $ref: '#/components/schemas/Workflow'
        description: 'Workflow to be updated'
  /workflowAsLibrary/{workflowLibraryKey}:
    get:
      tags:
        - workflowAsLibrary
      summary: provide the workflow library details
      operationId: workflowAsLibraryContent
      description: return the workflow of the library identified by workflowLibraryKey
      parameters:
        - in: path
          name: workflowLibraryKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: workflow of the library
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Workflow'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    delete:
      tags:
        - workflowAsLibrary
      summary: remove the workflow library
      operationId: deleteWorkflowLibrary
      description: delete the workflow library identified by the workflowLibraryKey parameter
      parameters:
        - in: path
          name: workflowLibraryKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: workflow library deleted successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /ingestionRoots:
    get:
      tags:
        - ingestion
      summary: list of ingested workflows
      operationId: ingetionRootsList
      description: return the list of workflows meeting the input filter parameters
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: mediaItemKey
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: startIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: endIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: label
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
            enum: [All, NotCompleted, CompletedSuccessful, CompletedWithFailures]
        - in: query
          name: asc
          required: false
          schema:
            type: boolean
        - in: query
          name: ingestionJobOutputs
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: list of the workflow
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - workflows
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        workflows:
                          type: array
                          items:
                            $ref: '#/components/schemas/IngestionRoot'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /ingestionRoots/{ingestionRootKey}:
    get:
      tags:
        - ingestion
      summary: provide the ingested workflow details
      operationId: ingetionRootDetails
      description: provide the ingested workflow details
      parameters:
        - in: path
          name: ingestionRootKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: workflow details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - workflows
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        workflows:
                          type: array
                          items:
                            $ref: '#/components/schemas/IngestionRoot'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /ingestionRoot/metaDataContent/{ingestionRootKey}:
    get:
      tags:
        - ingestion
      summary: provide the workflow content
      operationId: ingetionRootMetadataContent
      description: provide the workflow content
      parameters:
        - in: path
          name: ingestionRootKey
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: processedMetadata
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: workflow content
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /ingestionJobs:
    get:
      tags:
        - ingestion
      summary: list of ingested jobs
      operationId: ingetionJobsList
      description: return the list of ingestion jobs meeting the input filter parameters
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: label
          required: false
          schema:
            type: string
        - in: query
          name: startIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: endIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: ingestionType
          required: false
          schema:
            type: string
            enum: [Add-Content, Remove-Content, Encode, Frame, Periodical-Frames, I-Frames, Motion-JPEG-by-Periodical-Frames, Motion-JPEG-by-I-Frames, Slideshow, Concat-Demuxer, Cut, Overlay-Image-On-Video, Overlay-Text-On-Video, FTP-Delivery, HTTP-Callback, Local-Copy, Extract-Tracks, Post-On-Facebook, Post-On-YouTube, Face-Recognition, Face-Identification, Live-Recorder, Change-File-Format, Video-Speed, Picture-In-Picture, Live-Proxy, Live-Cut, Live-Grid, Awaiting-The-Beginning, Intro-Outro-Overlay, VOD-Proxy, Email-Notification, Media-Cross-Reference, Workflow-As-Library, Check-Streaming, ContentUpdate, ContentRemove, GroupOfTasks]
        - in: query
          name: asc
          required: false
          schema:
            type: boolean
        - in: query
          name: ingestionJobOutputs
          required: false
          schema:
            type: boolean
        - in: query
          name: jsonParametersCondition
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
            enum: [all, notCompleted, completed]
      responses:
        '200':
          description: list of the ingestion jobs
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - ingestionJobs
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        ingestionJobs:
                          type: array
                          items:
                            $ref: '#/components/schemas/IngestionJob'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /ingestionJobs/{ingestionJobKey}:
    get:
      tags:
        - ingestion
      summary: provide ingested job details
      operationId: ingetionJobDetails
      description: provide ingested job details
      parameters:
        - in: path
          name: ingestionJobKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ingestion job details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - ingestionJobs
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        ingestionJobs:
                          type: array
                          items:
                            $ref: '#/components/schemas/IngestionJob'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - ingestion
      summary: update of the IngestionJob metadata
      operationId: updateIngestionJob
      description: This API updates the IngestionJob metadata. It is possible to update the IngestionJob metadata only in case his status is Start_TaskQueued and his type is LiveRecorder. In this scenario it is possible to change the ingestion job label and/or the channel label and/or the recording period start and/or the recording period end and/or the recording virtual vod
      parameters:
        - in: path
          name: ingestionJobKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ingestion job updated successful
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - status
                  properties:
                    status:
                      type: string
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - IngestionType
                  - IngestionJobLabel
                  - ChannelLabel
                  - RecordingPeriodStart
                  - RecordingPeriodEnd
                  - RecordingVirtualVOD
                properties:
                  IngestionType:
                    type: string
                    enum: [Live-Recorder]
                  IngestionJobLabel:
                    type: string
                  ChannelLabel:
                    type: string
                  RecordingPeriodStart:
                    type: string
                    format: date-time
                    example: '2021-04-08T20:28:33Z'
                  RecordingPeriodEnd:
                    type: string
                    format: date-time
                    example: '2021-04-08T20:28:33Z'
                  RecordingVirtualVOD:
                    type: boolean
        description: 'IngestionJob fields to be updated'
    delete:
      tags:
        - ingestion
      summary: remove the ingestion job
      operationId: deleteIngestionJob
      description: delete the ingestion job identified by the ingestionJobKey parameter
      parameters:
        - in: path
          name: ingestionJobKey
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: forceCancel
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: ingestion job deleted successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /ingestion:
    post:
      tags:
        - ingestion
      summary: add a new workflow to be executed
      operationId: addWorkflow
      description: This API add a new workflow to be executed
      responses:
        '201':
          description: details/identifiers about every single job belonging to the workflow
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - workflow
                    - tasks
                  properties:
                    workflow:
                      $ref: '#/components/schemas/IngestionWorkflowResponse'
                    tasks:
                      type: object
                      items:
                        $ref: '#/components/schemas/IngestionTaskResponse'
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                  $ref: '#/components/schemas/Workflow'
        description: 'Workflow to be updated'
  /mediaItem:
    get:
      tags:
        - mediaItems
      summary: list media items (contents) meeting the query filter parameters
      operationId: listMediaItemsWithoutTagsFilter
      description: This API lists media items (contents) meeting the query filter parameters
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: title
          required: false
          schema:
            type: string
        - in: query
          name: uniqueName
          required: false
          schema:
            type: string
        - in: query
          name: contentType
          required: false
          schema:
            type: string
            enum: [Video, Audio, Image]
        - in: query
          name: liveRecordingChunk
          required: false
          schema:
            type: boolean
        - in: query
          name: startIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: endIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: jsonCondition
          required: false
          schema:
            type: string
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: jsonOrderBy
          required: false
          schema:
            type: string
      responses:
        '200':
          description: list media items details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - mediaItems
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        mediaItems:
                          type: array
                          items:
                            $ref: '#/components/schemas/MediaItem'
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - mediaItems
      summary: list media items (contents) meeting the query filter parameters. The body could contain a filter about the tags
      operationId: listMediaItemsWithTagsFilter
      description: This API list media items (contents) meeting the query filter parameters. The body could contain a filter about the tags
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: title
          required: false
          schema:
            type: string
        - in: query
          name: uniqueName
          required: false
          schema:
            type: string
        - in: query
          name: contentType
          required: false
          schema:
            type: string
            enum: [Video, Audio, Image]
        - in: query
          name: liveRecordingChunk
          required: false
          schema:
            type: boolean
        - in: query
          name: startIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: endIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: jsonCondition
          required: false
          schema:
            type: string
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: jsonOrderBy
          required: false
          schema:
            type: string
      responses:
        '200':
          description: list media items details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - mediaItems
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        mediaItems:
                          type: array
                          items:
                            $ref: '#/components/schemas/MediaItem'
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                properties:
                  tagsIn:
                    type: array
                    items:
                      type: string
                  tagsNotIn:
                    type: array
                    items:
                      type: string
        description: 'optional input filter for tags'
  /mediaItem/{mediaItemKey}:
    get:
      tags:
        - mediaItems
      summary: get the media item meeting the path parameter mediaItemKey
      operationId: listMediaItemsWithoutTagsFilter
      description: This API get the media item meeting the path parameter mediaItemKey
      parameters:
        - in: path
          name: mediaItemKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: list media items details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - mediaItems
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        mediaItems:
                          type: array
                          items:
                            $ref: '#/components/schemas/MediaItem'
        '400':
          description: 'Json field is not present or it is null'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - mediaItems
      summary: update media item
      operationId: updateMediaItemDetails
      description: This API update media item
      parameters:
        - in: path
          name: mediaItemKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: media item details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - mediaItems
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        mediaItems:
                          type: array
                          items:
                            $ref: '#/components/schemas/MediaItem'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                properties:
                  Title:
                    type: string
                  UserData:
                    type: object
                    additionalProperties: {}
                  RetentionInMinutes:
                    type: integer
                    format: int32
                  Tags:
                    type: array
                    items:
                      type: string
                  UniqueName:
                    type: string
        description: 'optional input filter for tags'
  /mediaItem/{mediaItemKey}/{physicalPathKey}:
    put:
      tags:
        - mediaItems
      summary: update physical path metadata
      operationId: updatePhysicalPathDetails
      description: This API updates physical path metadata
      parameters:
        - in: path
          name: mediaItemKey
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: physicalPathKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: physical path details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - mediaItems
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        mediaItems:
                          type: array
                          items:
                            $ref: '#/components/schemas/MediaItem'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - RetentionInMinutes
                properties:
                  RetentionInMinutes:
                    type: integer
                    format: int32
        description: 'optional input filter for tags'
  /tags:
    get:
      tags:
        - mediaItems
      summary: list tags meeting the input filter parameters
      operationId: listTags
      description: This API lists tags meeting the input filter parameters
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: contentType
          required: false
          schema:
            type: string
            enum: [Video, Audio, Image]
      responses:
        '200':
          description: list tags
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - tags
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        tags:
                          type: array
                          items:
                            type: string
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /encodingJobs:
    get:
      tags:
        - encoding
      summary: list of encoding jobs
      operationId: encodingJobsList
      description: return the list of encoding jobs meeting the input filter parameters
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: startIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: endIngestionDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: startEncodingDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: endEncodingDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-04-08T20:28:33Z'
        - in: query
          name: encoderKey
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: alsoEncodingJobsFromOtherWorkspaces
          required: false
          schema:
            type: boolean
        - in: query
          name: asc
          required: false
          schema:
            type: boolean
        - in: query
          name: status
          required: false
          schema:
            type: string
            enum: [All, Completed, Processing, ToBeProcessed]
        - in: query
          name: types
          required: false
          schema:
            type: string
            enum: [EncodeVideoAudio, EncodeImage, OverlayImageOnVideo, OverlayTextOnVideo, GenerateFrames, SlideShow, FaceRecognition, FaceIdentification, LiveRecorder, VideoSpeed, PictureInPicture, LiveProxy, LiveGrid, AwaitingTheBeginning, IntroOutroOverlay, CutFrameAccurate, VODProxy]
            description: 'it is possible to have also more than one type comma separated'
      responses:
        '200':
          description: list of the encoding jobs
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encodingJobs
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        encodingJobs:
                          type: array
                          items:
                            $ref: '#/components/schemas/EncodingJob'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /encodingJobs/{encodingJobKey}:
    get:
      tags:
        - encoding
      summary: provide encoding job details
      operationId: encodingJobDetails
      description: provide encoding job details
      parameters:
        - in: path
          name: encodingJobKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encoding job details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encodingJobs
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        ingestionJobs:
                          type: array
                          items:
                            $ref: '#/components/schemas/EncodingJob'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - encoding
      summary: update of the EncodingJob metadata
      operationId: updateEncodingJob
      description: This API updates the encoding priority of an encoding job or, if the tryEncodingAgain query parameter is true, re-try again the encoding.
      parameters:
        - in: path
          name: encodingJobKey
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: newEncodingJobPriorityCode
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: tryEncodingAgain
          required: false
          schema:
            type: string
            enum: [true, false]
      responses:
        '200':
          description: encoding job updated successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    delete:
      tags:
        - encoding
      summary: remove/kill the EncodingJob
      operationId: removeEncodingJob
      description: This API remove if not started or kill if it is running the encoding job.
      parameters:
        - in: path
          name: encodingJobKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encoding job removed/killed successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /profile/{encodingProfileKey}:
    get:
      tags:
        - encodingProfiles
      summary: provide encoding profile details
      operationId: encodingProfileDetails
      description: listprovide encoding profile details
      parameters:
        - in: path
          name: encodingProfileKey
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: contentType
          required: false
          schema:
            type: string
            enum: [Video, Audio, Image]
        - in: query
          name: label
          required: false
          schema:
            type: string
      responses:
        '200':
          description: encoding profile details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encodingProfiles
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        encodingProfiles:
                          type: array
                          items:
                            $ref: '#/components/schemas/EncodingProfile'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    delete:
      tags:
        - encodingProfiles
      summary: delete encoding profile
      operationId: deleteEncodingProfile
      description: delete encoding profile
      parameters:
        - in: path
          name: encodingProfileKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encoding profile removed successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /profilesSet/{encodingProfilesSetKey}:
    get:
      tags:
        - encodingProfiles
      summary: provide encoding profiles set details
      operationId: encodingProfilesSetDetails
      description: provide encoding profiles set details
      parameters:
        - in: path
          name: encodingProfilesSetKey
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: contentType
          required: false
          schema:
            type: string
            enum: [Video, Audio, Image]
      responses:
        '200':
          description: encoding profiles set details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - encodingProfilesSets
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        encodingProfilesSets:
                          type: array
                          items:
                            $ref: '#/components/schemas/EncodingProfilesSet'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    delete:
      tags:
        - encodingProfiles
      summary: delete encoding profiles set
      operationId: deleteEncodingProfilesSet
      description: delete encoding profiles set
      parameters:
        - in: path
          name: encodingProfilesSetKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: encoding profiles set removed successful
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /profilesSet:
    put:
      tags:
        - encodingProfiles
      summary: add/update encoding profiles set
      operationId: addEncodingProfilesSet
      description: add/update encoding profiles set
      parameters:
        - in: query
          name: contentType
          required: true
          schema:
            type: string
            enum: [Video, Audio, Image]
      responses:
        '200':
          description: encoding profiles set details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - encodingProfilesSet
                  properties:
                    encodingProfilesSet:
                      type: object
                      required:
                        - encodingProfilesSet
                        - profiles
                      properties:
                        encodingProfilesSet:
                          type: object
                          required:
                            - encodingProfilesSetKey
                            - label
                          properties:
                            encodingProfilesSetKey:
                              type: integer
                              format: int64
                            label:
                              type: string
                        profiles:
                          type: array
                          items:
                            type: object
                            required:
                              - encodingProfileKey
                              - label
                            properties:
                              encodingProfileKey:
                                type: integer
                                format: int64
                              label:
                                type: string
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Label
                  - Profiles
                properties:
                  Label:
                    type: string
                    description: label of the encoding profiles set
                  Profiles:
                    type: array
                    items:
                      type: string
                      description: label of the encoding profile
        description: 'encoding profiles set details'
  /profile:
    put:
      tags:
        - encodingProfiles
      summary: add/update encoding profile
      operationId: addEncodingProfile
      description: add/update encoding profile
      parameters:
        - in: query
          name: contentType
          required: true
          schema:
            type: string
            enum: [Video, Audio, Image]
      responses:
        '200':
          description: encoding profile details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - encodingProfilesSetKey
                    - label
                  properties:
                    encodingProfilesSetKey:
                      type: integer
                      format: int64
                    label:
                      type: string
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncodingProfileBody'
        description: 'encoding profiles set details'
  /delivery/vod/{physicalPathKey}:
    get:
      tags:
        - delivery
      summary: create a VOD delivery authorization
      operationId: createVODDeliveryAuthorization
      description: create a VOD delivery authorization
      parameters:
        - in: path
          name: physicalPathKey
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: ttlInSeconds
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: maxRetries
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: save
          required: false
          schema:
            type: boolean
        - in: query
          name: authorizationThroughPath
          required: false
          schema:
            type: boolean
        - in: query
          name: redirect
          required: false
          schema:
            type: boolean
      responses:
        '201':
          description: authorization details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - deliveryURL
                    - deliveryFileName
                    - ttlInSeconds
                    - maxRetries
                  properties:
                    deliveryURL:
                      type: string
                    deliveryFileName:
                      type: string
                    ttlInSeconds:
                      type: integer
                      format: int32
                    maxRetries:
                      type: integer
                      format: int32
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /delivery/live/{ingestionJobKey}:
    get:
      tags:
        - delivery
      summary: create a LIVE delivery authorization
      operationId: createLIVEDeliveryAuthorization
      description: create a LIVE delivery authorization
      parameters:
        - in: path
          name: ingestionJobKey
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: ttlInSeconds
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: maxRetries
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: authorizationThroughPath
          required: false
          schema:
            type: boolean
        - in: query
          name: redirect
          required: false
          schema:
            type: boolean
      responses:
        '201':
          description: authorization details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - deliveryURL
                    - deliveryFileName
                    - ttlInSeconds
                    - maxRetries
                  properties:
                    deliveryURL:
                      type: string
                    deliveryFileName:
                      type: string
                    ttlInSeconds:
                      type: integer
                      format: int32
                    maxRetries:
                      type: integer
                      format: int32
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /bulkOfDelivery:
    post:
      tags:
        - delivery
      summary: create a bulk of delivery authorizations
      operationId: createBulkDeliveryAuthorization
      description: create a bulk of delivery authorizations
      parameters:
        - in: query
          name: ttlInSeconds
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: maxRetries
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: authorizationThroughPath
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: authorizations request details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - uniqueNameList
                    - liveIngestionJobKeyList
                  properties:
                    uniqueNameList:
                      type: object
                      items:
                        type: object
                        required:
                          - uniqueName
                          - encodingProfileKey
                          - encodingProfileLabel
                          - deliveryURL
                        properties:
                          uniqueName:
                            type: string
                          encodingProfileKey:
                            type: integer
                            format: int64
                          encodingProfileLabel:
                            type: string
                          deliveryURL:
                            type: string
                    liveIngestionJobKeyList:
                      type: object
                      items:
                        type: object
                        required:
                          - ingestionJobKey
                          - deliveryCode
                          - deliveryURL
                        properties:
                          ingestionJobKey:
                            type: integer
                            format: int64
                          deliveryCode:
                            type: integer
                            format: int64
                          deliveryURL:
                            type: string
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - uniqueNameList
                  - liveIngestionJobKeyList
                properties:
                  uniqueNameList:
                    type: object
                    items:
                      type: object
                      required:
                        - uniqueName
                        - encodingProfileKey
                        - encodingProfileLabel
                      properties:
                        uniqueName:
                          type: string
                        encodingProfileKey:
                          type: integer
                          format: int64
                        encodingProfileLabel:
                          type: string
                  liveIngestionJobKeyList:
                    type: object
                    items:
                      type: object
                      required:
                        - ingestionJobKey
                        - deliveryCode
                      properties:
                        ingestionJobKey:
                          type: integer
                          format: int64
                        deliveryCode:
                          type: integer
                          format: int64
        description: 'request authorizations details'
  /conf/youtube:
    get:
      tags:
        - social
      summary: list all youTube configuration
      operationId: listYouTubeConfiguration
      description: list all youTube configuration
      responses:
        '200':
          description: youTube configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - youTubeConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        youTubeConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/YouTubeConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - social
      summary: add a youTube configuration
      operationId: addYouTubeConfiguration
      description: add a youTube configuration
      responses:
        '201':
          description: youTube configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Label
                  - RefreshToken
                properties:
                  Label:
                    type: string
                  RefreshToken:
                    type: string
        description: 'youTube configuration details'
  /conf/youtube/{confKey}:
    put:
      tags:
        - social
      summary: update a youTube configuration
      operationId: modifyYouTubeConfiguration
      description: update a youTube configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: youTube configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Label
                  - RefreshToken
                properties:
                  Label:
                    type: string
                  RefreshToken:
                    type: string
        description: 'youTube configuration details'
    delete:
      tags:
        - social
      summary: delete a youTube configuration
      operationId: deleteYouTubeConfiguration
      description: delete a youTube configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: youTube configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /conf/facebook:
    get:
      tags:
        - social
      summary: list all facebook configuration
      operationId: listFacebookConfiguration
      description: list all facebook configuration
      responses:
        '200':
          description: facebook configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - facebookConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        facebookConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/FacebookConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - social
      summary: add a facebook configuration
      operationId: addFacebookConfiguration
      description: add a facebook configuration
      responses:
        '201':
          description: facebook configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Label
                  - PageToken
                properties:
                  Label:
                    type: string
                  PageToken:
                    type: string
        description: 'facebook configuration details'
  /conf/facebook/{confKey}:
    put:
      tags:
        - social
      summary: update a facebook configuration
      operationId: modifyFacebookConfiguration
      description: update a facebook configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: facebook configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              items:
                type: object
                required:
                  - Label
                  - PageToken
                properties:
                  Label:
                    type: string
                  PageToken:
                    type: string
        description: 'facebook configuration details'
    delete:
      tags:
        - social
      summary: delete a facebook configuration
      operationId: deleteFacebookConfiguration
      description: delete a facebook configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: facebook configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /conf/ipChannel:
    get:
      tags:
        - channels
      summary: list all IP channels configuration
      operationId: listIPChannelsConfiguration
      description: list all IP channels configuration
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: label
          required: false
          schema:
            type: string
        - in: query
          name: url
          required: false
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: region
          required: false
          schema:
            type: string
        - in: query
          name: country
          required: false
          schema:
            type: string
        - in: query
          name: labelOrder
          required: false
          schema:
            type: string
            enum: [asc, desc]
      responses:
        '200':
          description: ip channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - channelConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        channelConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/IPChannelConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - channels
      summary: add an IP channel configuration
      operationId: addIPChannelConfiguration
      description: add an IP channel configuration
      responses:
        '201':
          description: ip channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPChannelConf'
        description: 'ip channel configuration details'
  /conf/ipChannel/{confKey}:
    get:
      tags:
        - channels
      summary: get the IP channel configuration
      operationId: ipChannelConfiguration
      description: get the IP channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ip channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - channelConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        channelConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/IPChannelConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - channels
      summary: update an IP channel configuration
      operationId: modifyIPChannelConfiguration
      description: update an IP channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ip channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPChannelConf'
        description: 'ip channel configuration details'
    delete:
      tags:
        - channels
      summary: delete an IP channel configuration
      operationId: deleteIPChannelConfiguration
      description: delete an IP channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ip channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /conf/satChannel:
    get:
      tags:
        - channels
      summary: list all SAT channels configuration
      operationId: listSATChannelsConfiguration
      description: list all SAT channels configuration
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: label
          required: false
          schema:
            type: string
        - in: query
          name: region
          required: false
          schema:
            type: string
        - in: query
          name: country
          required: false
          schema:
            type: string
        - in: query
          name: labelOrder
          required: false
          schema:
            type: string
            enum: [asc, desc]
      responses:
        '200':
          description: SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - channelConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        channelConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/SATChannelConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - channels
      summary: add a SAT channel configuration
      operationId: addSATChannelConfiguration
      description: add a SAT channel configuration
      responses:
        '201':
          description: SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SATChannelConf'
        description: 'SAT channel configuration details'
  /conf/satChannel/{confKey}:
    get:
      tags:
        - channels
      summary: get the SAT channel configuration
      operationId: satChannelConfiguration
      description: get the SAT channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - channelConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        channelConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/SATChannelConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - channels
      summary: update a SAT channel configuration
      operationId: modifySATChannelConfiguration
      description: update a SAT channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SATChannelConf'
        description: 'SAT channel configuration details'
    delete:
      tags:
        - channels
      summary: delete a SAT channel configuration
      operationId: deleteSATChannelConfiguration
      description: delete a SAT channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /conf/sourceSatChannel:
    get:
      tags:
        - channels
      summary: list all source SAT channels configuration
      operationId: listSourceSATChannelsConfiguration
      description: list all Source SAT channels configuration
      parameters:
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: serviceId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: lnb
          required: false
          schema:
            type: string
        - in: query
          name: frequency
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: videoPid
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: audioPids
          required: false
          schema:
            type: string
        - in: query
          name: nameOrder
          required: false
          schema:
            type: string
            enum: [asc, desc]
      responses:
        '200':
          description: Source SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - channelConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        channelConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/SourceSATChannelConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - channels
      summary: add a Source SAT channel configuration
      operationId: addSourceSATChannelConfiguration
      description: add a Source SAT channel configuration
      responses:
        '201':
          description: Source SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceSATChannelConf'
        description: 'Source SAT channel configuration details'
  /conf/sourceSatChannel/{confKey}:
    get:
      tags:
        - channels
      summary: get the Source SAT channel configuration
      operationId: sourceSatChannelConfiguration
      description: get the Source SAT channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: source SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - channelConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        channelConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/SourceSATChannelConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - channels
      summary: update a Source SAT channel configuration
      operationId: modifySourceSATChannelConfiguration
      description: update a Source SAT channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Source SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceSATChannelConf'
        description: 'Source SAT channel configuration details'
    delete:
      tags:
        - channels
      summary: delete a Source SAT channel configuration
      operationId: deleteSourceSATChannelConfiguration
      description: delete a Source SAT channel configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Source SAT channel configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /conf/ftp:
    get:
      tags:
        - ftp
      summary: list all FTP configuration
      operationId: listFTPConfigurations
      description: list all FTP configuration
      responses:
        '200':
          description: FTP configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - ftpConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        ftpConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/FTPConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - ftp
      summary: add a FTP configuration
      operationId: addFTPConfiguration
      description: add a FTP configuration
      responses:
        '201':
          description: FTP configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FTPConf'
        description: 'FTP configuration details'
  /conf/ftp/{confKey}:
    get:
      tags:
        - ftp
      summary: list all FTP configuration
      operationId: listFTPConfiguration
      description: list all FTP configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: FTP configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - ftpConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        ftpConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/FTPConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - ftp
      summary: update a FTP configuration
      operationId: modifyFTPConfiguration
      description: update a FTP configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ftp configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FTPConf'
        description: 'FTP configuration details'
    delete:
      tags:
        - ftp
      summary: delete a FTP configuration
      operationId: deleteFTPConfiguration
      description: delete a FTP configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: FTP configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
  /conf/email:
    get:
      tags:
        - email
      summary: list all EMail configuration
      operationId: listEMailConfigurations
      description: list all EMail configuration
      responses:
        '200':
          description: EMail configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - emailConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        emailConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/EMailConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    post:
      tags:
        - email
      summary: add a EMail configuration
      operationId: addEMailConfiguration
      description: add a EMail configuration
      responses:
        '201':
          description: EMail configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMailConf'
        description: 'EMail configuration details'
  /conf/email/{confKey}:
    get:
      tags:
        - email
      summary: list all EMail configuration
      operationId: listEMailConfiguration
      description: list all EMail configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: EMail configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    # - requestParameters
                    - response
                  properties:
                    # requestParameters:
                    response:
                      type: object
                      required:
                        - numFound
                        - emailConf
                      properties:
                        numFound:
                          type: integer
                          format: int32
                        emailConf:
                          type: array
                          items:
                            $ref: '#/components/schemas/EMailConf'
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
    put:
      tags:
        - email
      summary: update a EMail configuration
      operationId: modifyEMailConfiguration
      description: update a EMail configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: EMail configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EMailConf'
        description: 'EMail configuration details'
    delete:
      tags:
        - email
      summary: delete an EMail configuration
      operationId: deleteEMailConfiguration
      description: delete an EMail configuration
      parameters:
        - in: path
          name: confKey
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: EMail configuration details
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  required:
                    - confKey
                  properties:
                    confKey:
                      type: integer
                      format: int64
        '401':
          description: 'wrong basic authentication'
        '500':
          description: 'internal server error'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    AudioTrack:
      type: object
      required:
        - audioTrackKey
        - trackIndex
        - codecName
        - bitRate
        - channels
        - sampleRate
        - language
        - durationInMilliSeconds
      properties:
        audioTrackKey:
          type: integer
          format: int64
        trackIndex:
          type: integer
          format: int32
        codecName:
          type: string
        bitRate:
          type: integer
          format: int64
        channels:
          type: integer
          format: int32
        sampleRate:
          type: integer
          format: int32
        language:
          type: string
        durationInMilliSeconds:
          type: integer
          format: int64
    CrossReference:
      type: object
      required:
        - sourceMediaItemKey
        - type
        - parameters
      properties:
        sourceMediaItemKey:
          type: integer
          format: int64
        type:
          type: string
          enum: [ImageOfVideo, ImageOfAudio, FaceOfVideo, CutOfVideo, CutOfAudio]
        parameters:
          type: string
    Encoder:
      type: object
      required:
        - enabled
        - encoderKey
        - external
        - label
        - protocol
        - port
        - serverName
      properties:
        enabled:
          type: boolean
          example: true
        encoderKey:
          type: integer
          format: int64
        external:
          type: boolean
          example: true
        label:
          type: string
          example: encoder for channels
        protocol:
          type: string
          example: http
        port:
          type: integer
          format: int32
          example: 8088
        serverName:
          type: string
          example: mms-t-transcoder-fr-1
    EncodersPool:
      type: object
      required:
        - encodersPoolKey
        - label
        - encoders
      properties:
        encodersPoolKey:
          type: integer
          format: int64
        label:
          type: string
          example: encodersPool for channels
        encoders:
          type: array
          items:
            $ref: '#/components/schemas/Encoder'
    EncodingJob:
      type: object
      required:
        - encodingJobKey
        - ingestionJobKey
        - type
        - status
        - start
        - end
        - parameters
        - progress
        - failuresNumber
        - encodingPriority
        - encodingPriorityCode
        - maxEncodingPriorityCode
        - ownedByCurrentWorkspace
        - processorMMS
        - encoderKey
        - encodingPid
      properties:
        encodingJobKey:
          type: integer
          format: int64
        ingestionJobKey:
          type: integer
          format: int64
        type:
          type: string
          enum: [EncodeVideoAudio, EncodeImage, OverlayImageOnVideo, OverlayTextOnVideo, GenerateFrames, SlideShow, FaceRecognition, FaceIdentification, LiveRecorder, VideoSpeed, PictureInPicture, LiveProxy, LiveGrid, AwaitingTheBeginning, IntroOutroOverlay, CutFrameAccurate, VODProxy]
        status:
          type: string
          enum: [ToBeProcessed, Processing, End_Success, End_Failed, End_KilledByUser, End_CanceledByUser, End_CanceledByMMS]
        start:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        end:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        parameters:
          type: object
          additionalProperties: {}
        progress:
          type: integer
          format: int32
        failuresNumber:
          type: integer
          format: int32
        encodingPriority:
          type: string
          enum: [Low, Medium, High]
        encodingPriorityCode:
          type: integer
          format: int32
        maxEncodingPriorityCode:
          type: integer
          format: int32
        ownedByCurrentWorkspace:
          type: boolean
        processorMMS:
          type: string
        encoderKey:
          type: integer
          format: int64
        encodingPid:
          type: integer
          format: int64
    IngestionJob:
      type: object
      required:
        - ingestionJobKey
        - ingestionRootKey
        - label
        - status
        - ingestionType
        - startProcessing
        - endProcessing
        - processingStartingFrom
        - encodingJob
        - downloadingProgress
        - errorMessage
        - mediaItems
        - metaDataContent
        - processorMMS
        - uploadingProgress
      properties:
        ingestionJobKey:
          type: integer
          format: int64
        ingestionRootKey:
          type: integer
          format: int64
        label:
          type: string
        status:
          type: string
          enum: [Start_TaskQueued, SourceDownloadingInProgress, SourceMovingInProgress, SourceCopingInProgress, SourceUploadingInProgress, EncodingQueued, End_CanceledByUser, End_CanceledByMMS, End_ValidationMetadataFailed, End_ValidationMediaSourceFailed, End_WorkspaceReachedMaxStorageOrIngestionNumber, End_IngestionFailure, End_NotToBeExecuted, End_NotToBeExecuted_ChunkNotSelected, End_TaskSuccess]
        ingestionType:
          type: string
          enum: [Add-Content, Remove-Content, Encode, Frame, Periodical-Frames, I-Frames, Motion-JPEG-by-Periodical-Frames, Motion-JPEG-by-I-Frames, Slideshow, Concat-Demuxer, Cut, Overlay-Image-On-Video, Overlay-Text-On-Video, FTP-Delivery, HTTP-Callback, Local-Copy, Extract-Tracks, Post-On-Facebook, Post-On-YouTube, Face-Recognition, Face-Identification, Live-Recorder, Change-File-Format, Video-Speed, Picture-In-Picture, Live-Proxy, Live-Cut, Live-Grid, Awaiting-The-Beginning, Intro-Outro-Overlay, VOD-Proxy, Email-Notification, Media-Cross-Reference, Workflow-As-Library, Check-Streaming, ContentUpdate, ContentRemove, GroupOfTasks]
        startProcessing:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        endProcessing:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        processingStartingFrom:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        encodingJob:
          $ref: '#/components/schemas/EncodingJob'
        downloadingProgress:
          type: integer
          format: int32
        errorMessage:
          type: string
        mediaItems:
          type: array
          items:
            $ref: '#/components/schemas/MediaItem'
        metaDataContent:
          type: string
        processorMMS:
          type: string
        uploadingProgress:
          type: integer
          format: int32
    EncodingProfile:
      type: object
      required:
        - encodingProfileKey
        - label
        - contentType
        - global
        - deliveryTechnology
        - profile
      properties:
        encodingProfileKey:
          type: integer
          format: int64
        label:
          type: string
        contentType:
          type: string
          enum: [Video, Audio, Image]
        global:
          type: boolean
        deliveryTechnology:
          type: string
        profile:
          $ref: '#/components/schemas/EncodingProfileBody'
    EncodingProfileBody:
      type: object
      required:
        - Label
        - FileFormat
      properties:
        Label:
          type: string
        FileFormat:
          type: string
        HLS:
          $ref: '#/components/schemas/EncodingProfileHLSParameters'
        Video:
          $ref: '#/components/schemas/EncodingProfileVideoParameters'
        Audio:
          $ref: '#/components/schemas/EncodingProfileAudioParameters'
        Image:
          $ref: '#/components/schemas/EncodingProfileImageParameters'
    EncodingProfileHLSParameters:
      type: object
      required:
        - SegmentDuration
      properties:
        SegmentDuration:
          type: integer
          format: int32
    EncodingProfileVideoParameters:
      type: object
      required:
        - Codec
        - Profile
        - BitRates
        - TwoPasses
        - FrameRate
        - OtherOutputParameters
      properties:
        Codec:
          type: string
        Profile:
          type: string
        BitRates:
          type: object
          items:
            type: object
            required:
              - Width
              - Height
              - KBitRate
            properties:
              Width:
                type: integer
                format: int32
              Height:
                type: integer
                format: int32
              KBitRate:
                type: integer
                format: int32
        TwoPasses:
          type: boolean
        FrameRate:
          type: integer
          format: int32
        OtherOutputParameters:
          type: string
    EncodingProfileAudioParameters:
      type: object
      required:
        - Codec
        - ChannelsNumber
        - BitRates
      properties:
        Codec:
          type: string
        ChannelsNumber:
          type: integer
          format: int32
        BitRates:
          type: object
          items:
            type: object
            required:
              - KBitRate
            properties:
              KBitRate:
                type: integer
                format: int32
    EncodingProfileImageParameters:
      type: object
      required:
        - Width
        - Height
        - InterlaceType
        - AspectRatio
        - Comment
      properties:
        Width:
          type: integer
          format: int32
        Height:
          type: integer
          format: int32
        InterlaceType:
          type: string
          enum: [NoInterlace, LineInterlace, PlaneInterlace, PartitionInterlace]
        AspectRatio:
          type: boolean
        Comment:
          type: string
    EncodingProfilesSet:
      type: object
      required:
        - encodingProfilesSetKey
        - label
        - contentType
        - encodingProfiles
      properties:
        encodingProfilesSetKey:
          type: integer
          format: int64
        label:
          type: string
        contentType:
          type: string
          enum: [Video, Audio, Image]
        encodingProfiles:
          type: array
          items:
            $ref: '#/components/schemas/EncodingProfile'
    FacebookConf:
      type: object
      required:
        - confKey
        - label
        - pageToken
      properties:
        confKey:
          type: integer
          format: int64
        label:
          type: string
        pageToken:
          type: string
    FTPConf:
      type: object
      required:
        - confKey
        - label
        - server
        - port
        - userName
        - password
        - remoteDirectory
      properties:
        confKey:
          type: integer
          format: int64
        label:
          type: string
        server:
          type: string
        port:
          type: integer
          format: int32
        userName:
          type: string
        password:
          type: string
        remoteDirectory:
          type: string
    IngestionRoot:
      type: object
      required:
        - ingestionRootKey
        - label
        - status
        - ingestionDate
        - ingestionJobs
        - lastUpdate
        - userKey
        - userName
      properties:
        ingestionRootKey:
          type: integer
          format: int64
        label:
          type: string
        status:
          type: string
        ingestionDate:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        ingestionJobs:
          type: array
          items:
            $ref: '#/components/schemas/IngestionJob'
        lastUpdate:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        userKey:
          type: integer
          format: int64
        userName:
          type: string
    IngestionWorkflowResponse:
      type: object
      required:
        - ingestionRootKey
        - label
      properties:
        ingestionRootKey:
          type: integer
          format: int64
        label:
          type: string
    IngestionTaskResponse:
      type: object
      required:
        - ingestionJobKey
        - label
      properties:
        ingestionJobKey:
          type: integer
          format: int64
        label:
          type: string
    IPChannelConf:
      type: object
      required:
        - confKey
        - label
        - url
        - type
        - description
        - name
        - region
        - country
        - imageMediaItemKey
        - imageUniqueName
        - position
        - channelData
      properties:
        confKey:
          type: integer
          format: int64
        label:
          type: string
        url:
          type: string
        type:
          type: string
        description:
          type: string
        name:
          type: string
        region:
          type: string
        country:
          type: string
        imageMediaItemKey:
          type: integer
          format: int64
        imageUniqueName:
          type: string
        position:
          type: integer
          format: int32
        channelData:
          type: object
          additionalProperties: {}
    MediaItem:
      type: object
      required:
        - mediaItemKey
        - title
        - contentType
        - ingestionDate
        - physicalPaths
        - startPublishing
        - endPublishing
        - uniqueName
        - userData
        - retentionInMinutes
        - tags
        - crossReferences
        - ingester
        - deliveryFileName
        - providerName
      properties:
        mediaItemKey:
          type: integer
          format: int64
        title:
          type: string
        contentType:
          type: string
          enum: [Video, Audio, Image]
        ingestionDate:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        physicalPaths:
          type: array
          items:
            $ref: '#/components/schemas/PhysicalPath'
        startPublishing:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        endPublishing:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        uniqueName:
          type: string
        userData:
          type: object
          additionalProperties: {}
        retentionInMinutes:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        crossReferences:
          type: array
          items:
            $ref: '#/components/schemas/CrossReference'
        ingester:
          type: string
        deliveryFileName:
          type: string
        providerName:
          type: string
    PhysicalPath:
      type: object
      required:
        - physicalPathKey
        - encodingProfileKey
        - fileFormat
        - partitionNumber
        - relativePath
        - fileName
        - sizeInBytes
        - retentionInMinutes
        - durationInMilliSeconds
        - bitRate
        - videoTracks
        - audioTracks
        - deliveryTechnology
        - externalDeliveryTechnology
        - externalDeliveryURL
        - externalReadOnlyStorage
        - creationDate
      properties:
        physicalPathKey:
          type: integer
          format: int64
        encodingProfileKey:
          type: integer
          format: int64
        fileFormat:
          type: string
        partitionNumber:
          type: integer
          format: int32
        relativePath:
          type: string
        fileName:
          type: string
        sizeInBytes:
          type: integer
          format: int64
        retentionInMinutes:
          type: integer
          format: int32
        durationInMilliSeconds:
          type: integer
          format: int64
        bitRate:
          type: integer
          format: int64
        videoTracks:
          type: array
          items:
            $ref: '#/components/schemas/VideoTrack'
        audioTracks:
          type: array
          items:
            $ref: '#/components/schemas/AudioTrack'
        deliveryTechnology:
          type: string
        externalDeliveryTechnology:
          type: string
        externalDeliveryURL:
          type: string
        externalReadOnlyStorage:
          type: boolean
        creationDate:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
    SATChannelConf:
      type: object
      required:
        - confKey
        - sourceSATConfKey
        - label
        - region
        - country
        - imageMediaItemKey
        - imageUniqueName
        - position
        - channelData
      properties:
        confKey:
          type: integer
          format: int64
        sourceSATConfKey:
          type: integer
          format: int64
        label:
          type: string
        region:
          type: string
        country:
          type: string
        imageMediaItemKey:
          type: integer
          format: int64
        imageUniqueName:
          type: string
        position:
          type: integer
          format: int32
        channelData:
          type: object
          additionalProperties: {}
    SourceSATChannelConf:
      type: object
      required:
        - confKey
        - serviceId
        - networkId
        - transportStreamId
        - name
        - satellite
        - frequency
        - lnb
        - videoPid
        - audioPids
        - audioItalianPid
        - audioEnglishPid
        - teletextPid
        - modulation
        - polarization
        - symbolRate
        - country
        - deliverySystem
      properties:
        confKey:
          type: integer
          format: int64
        serviceId:
          type: integer
          format: int64
        networkId:
          type: integer
          format: int64
        transportStreamId:
          type: integer
          format: int64
        name:
          type: string
        satellite:
          type: string
        frequency:
          type: integer
          format: int64
        lnb:
          type: string
        videoPid:
          type: integer
          format: int32
        audioPids:
          type: string
        audioItalianPid:
          type: integer
          format: int32
        audioEnglishPid:
          type: integer
          format: int32
        teletextPid:
          type: integer
          format: int32
        modulation:
          type: string
        polarization:
          type: string
        symbolRate:
          type: integer
          format: int64
        country:
          type: string
        deliverySystem:
          type: string
    Support:
      type: object
      required:
        - UserEmailAddress
        - Subject
        - Text
      properties:
        UserEmailAddress:
          type: string
          example: anthony@companyName.com
        Subject:
          type: string
          example: Proxy task does not work
        Text:
          type: string
          example: 'The Proxy task fails woth the following error: .....'
    UserRegistration:
      type: object
      required:
        - EMail
        - Password
      properties:
        EMail:
          type: string
          example: anthony@companyName.com
        Password:
          type: string
          example: 19264hd93h
        Name:
          type: string
          example: Anthony
        WorkspaceName:
          type: string
          description: name of the default workspace associated to the user. If not provided
            it is set with the 'Name' of the user if present adn, if not present, it is set
            with the 'EMail' of the user.
        Country:
          type: string
          example: Italy
    UserAndWorkspace:
      type: object
      required:
        - name
        - userKey
        - eMailAddress
        - country
        - creationDate
        - expirationDate
        - ldapEnabled
        - loginWorkspace
      properties:
        name:
          type: string
          example: Anthony
        userKey:
          type: integer
          format: int64
          example: 1
        eMailAddress:
          type: string
          format: email
          example: anthony@companyName.com
        country:
          type: string
          example: Italy
        creationDate:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        expirationDate:
          type: string
          format: date-time
          example: '2031-04-06T20:06:39Z'
        ldapEnabled:
          type: boolean
          example: false
        loginWorkspace:
          $ref: '#/components/schemas/Workspace'
    User:
      type: object
      required:
        - name
        - userKey
        - eMailAddress
        - country
        - creationDate
        - expirationDate
        - ldapEnabled
      properties:
        name:
          type: string
          example: Anthony
        userKey:
          type: integer
          format: int64
          example: 1
        eMailAddress:
          type: string
          format: email
          example: anthony@companyName.com
        country:
          type: string
          example: Italy
        creationDate:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        expirationDate:
          type: string
          format: date-time
          example: '2031-04-06T20:06:39Z'
        ldapEnabled:
          type: boolean
          example: false
    UserAPIKey:
      type: object
      required:
        - apiKey
        - owner
        - default
        - admin
        - applicationRecorder
        - cancelIngestionJob
        - createProfiles
        - createRemoveWorkspace
        - deliveryAuthorization
        - editConfiguration
        - editEncodersPool
        - editMedia
        - ingestWorkflow
        - killEncoding
        - shareWorkspace
      properties:
        apiKey:
          type: string
          example: 1j1l1x1p1l1d1q1r1f111w1u1d1p1e1r1q1h1C1j1p1d1l1o111f1r1p1b1b1V111S1b1b14141419131714161518
        owner:
          type: boolean
          example: true
        default:
          type: boolean
          example: true
        admin:
          type: boolean
          example: true
        applicationRecorder:
          type: boolean
          example: true
        cancelIngestionJob:
          type: boolean
          example: true
        createProfiles:
          type: boolean
          example: true
        createRemoveWorkspace:
          type: boolean
          example: true
        deliveryAuthorization:
          type: boolean
          example: true
        editConfiguration:
          type: boolean
          example: true
        editEncodersPool:
          type: boolean
          example: true
        editMedia:
          type: boolean
          example: true
        ingestWorkflow:
          type: boolean
          example: true
        killEncoding:
          type: boolean
          example: true
        shareWorkspace:
          type: boolean
          example: true
    VideoTrack:
      type: object
      required:
        - videoTrackKey
        - trackIndex
        - width
        - height
        - codecName
        - profile
        - bitRate
        - avgFrameRate
        - durationInMilliSeconds
      properties:
        videoTrackKey:
          type: integer
          format: int64
        trackIndex:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        codecName:
          type: string
        profile:
          type: string
        bitRate:
          type: integer
          format: int64
        avgFrameRate:
          type: integer
          format: int32
        durationInMilliSeconds:
          type: integer
          format: int64
    WorkflowVariable:
      type: object
      required:
        - Description
        - IsNull
        - Position
        - Type
        - Value
      properties:
        Description:
          type: string
          description: describe the variable
          example: Title of the Picture
        IsNull:
          type: boolean
        Position:
          type: integer
          format: int32
        Type:
          type: string
          enum: [string, integer, decimal, boolean, datetime, datetime-millisecs, jsonObject, jsonArray]
        Value:
          type: string
          description: the type of this 'Value' field really depends on the value of the previous 'Type' field
    WorkflowTask:
      type: object
      required:
        - Label
        - Type
        - Parameters
      properties:
        Label:
          type: string
          description: title of the workflow
        Type:
          type: string
          enum: [Add-Content, Remove-Content, Encode, Frame, Periodical-Frames, I-Frames, Motion-JPEG-by-Periodical-Frames, Motion-JPEG-by-I-Frames, Slideshow, Concat-Demuxer, Cut, Overlay-Image-On-Video, Overlay-Text-On-Video, FTP-Delivery, HTTP-Callback, Local-Copy, Extract-Tracks, Post-On-Facebook, Post-On-YouTube, Face-Recognition, Face-Identification, Live-Recorder, Change-File-Format, Video-Speed, Picture-In-Picture, Live-Proxy, Live-Cut, Live-Grid, Awaiting-The-Beginning, Intro-Outro-Overlay, VOD-Proxy, Email-Notification, Media-Cross-Reference, Workflow-As-Library, Check-Streaming, GroupOfTasks]
        Parameters:
          type: object
          additionalProperties: {}
    Workflow:
      type: object
      required:
        - Label
        - Type
        - Task
        - Variables
      properties:
        Label:
          type: string
          description: title of the workflow
        Type:
          type: string
          description: this is always 'Workflow'
        Task:
          $ref: '#/components/schemas/WorkflowTask'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/WorkflowVariable'
    WorkflowLibrary:
      type: object
      required:
        - workflowLibraryKey
        - creatorUserKey
        - global
        - label
        - thumbnailMediaItemKey
        - variables
      properties:
        workflowLibraryKey:
          type: integer
          format: int64
        creatorUserKey:
          type: integer
          format: int64
        global:
          type: boolean
          example: true
        label:
          type: string
          example: Best Picture of the Video
        thumbnailMediaItemKey:
          type: integer
          format: int64
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/WorkflowVariable'
    Workspace:
      type: object
      required:
        - creationDate
        - isEnabled
        - languageCode
        - maxStorageInMB
        - maxEncodingPriority
        - maxIngestionsNumber
        - encodingPeriod
        - userAPIKey
      properties:
        creationDate:
          type: string
          format: date-time
          example: '2021-04-08T20:28:33Z'
        isEnabled:
          type: boolean
          example: true
        languageCode:
          type: string
          example: it
        maxStorageInMB:
          type: integer
          format: int64
          example: 500000
        maxEncodingPriority:
          type: string
          example: Low
        maxIngestionsNumber:
          type: integer
          format: int64
          example: 20000
        encodingPeriod:
          type: string
          example: Daily
        userAPIKey:
          $ref: '#/components/schemas/UserAPIKey'
    YouTubeConf:
      type: object
      required:
        - confKey
        - label
        - refreshToken
      properties:
        confKey:
          type: integer
          format: int64
        label:
          type: string
        refreshToken:
          type: string